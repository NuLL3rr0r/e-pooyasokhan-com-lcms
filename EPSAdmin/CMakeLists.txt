IF ( BUILD_EPS_ADMIN )
    SET ( EPS_ADMIN_BIN_FILE "${EPS_ADMIN_BIN_NAME}" )

    IF ( NOT WIN32 AND NOT MINGW )
        ADD_EXECUTABLE ( ${EPS_ADMIN_BIN_FILE} ${QT_GUI_TYPE} ${EPS_ADMIN_SOURCE_FILES} )    
    ELSE (  )
        SET ( CMAKE_RC_COMPILER_INIT windres )
        ENABLE_LANGUAGE( RC )
        SET ( CMAKE_RC_COMPILE_OBJECT "<CMAKE_RC_COMPILER> <FLAGS> -O coff <DEFINES> -i <SOURCE> -o <OBJECT>")
        ADD_EXECUTABLE ( ${EPS_ADMIN_BIN_FILE} ${QT_GUI_TYPE} ${EPS_ADMIN_SOURCE_FILES} ${EPS_ADMIN_RC_FILE} )
    ENDIF (  )

    FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
        SET_PROPERTY ( TARGET ${EPS_ADMIN_BIN_FILE}
            APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
    ENDFOREACH ( FLAG ${CXX11_FEATURE_LIST} )

    TARGET_LINK_LIBRARIES ( ${EPS_ADMIN_BIN_FILE}
        ${MYLIB_BIN_NAME}
        ${Boost_LIBRARIES}
    )

    FIND_PACKAGE( Qt5Core REQUIRED )
    SET ( CMAKE_AUTOMOC ON )
    SET ( CMAKE_INCLUDE_CURRENT_DIR ON )
    QT5_USE_MODULES( ${EPS_ADMIN_BIN_FILE} Declarative Qml Quick Widgets )

    GET_PROPERTY( EPS_ADMIN_EXECUTABLE TARGET ${EPS_ADMIN_BIN_FILE} PROPERTY LOCATION )

    IF ( CXX_GCC AND GCC_STRIP_EXECUTABLE )
        ADD_CUSTOM_COMMAND ( TARGET ${EPS_ADMIN_BIN_FILE}
            POST_BUILD
            COMMAND strip ${EPS_ADMIN_EXECUTABLE}
            COMMAND strip -R.comment ${EPS_ADMIN_EXECUTABLE}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )
ENDIF (  )


