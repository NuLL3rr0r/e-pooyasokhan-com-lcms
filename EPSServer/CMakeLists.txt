IF ( BUILD_EPS_SERVER )
    FILE ( GLOB EPS_SERVER_SOURCE_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.cpp )

    SET ( EPS_SERVER_BIN_FILE "${EPS_SERVER_BIN_NAME}" )

    IF ( NOT WIN32 AND NOT MINGW )
        ADD_EXECUTABLE ( ${EPS_SERVER_BIN_FILE} ${QT_GUI_TYPE} ${EPS_SERVER_SOURCE_FILES} )    
    ELSE (  )
        SET ( CMAKE_RC_COMPILER_INIT windres )
        ENABLE_LANGUAGE( RC )
        SET ( CMAKE_RC_COMPILE_OBJECT "<CMAKE_RC_COMPILER> <FLAGS> -O coff <DEFINES> -i <SOURCE> -o <OBJECT>")
        ADD_EXECUTABLE ( ${EPS_SERVER_BIN_FILE} ${QT_GUI_TYPE} ${EPS_SERVER_SOURCE_FILES} ${EPS_SERVER_RC_FILE} )
    ENDIF (  )

    FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
        SET_PROPERTY ( TARGET ${EPS_SERVER_BIN_FILE}
            APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
    ENDFOREACH ( FLAG ${CXX11_FEATURE_LIST} )

    TARGET_LINK_LIBRARIES ( ${EPS_SERVER_BIN_FILE}
        ${MYLIB_BIN_NAME}
        ${Boost_LIBRARIES}
    )

    IF ( DEFINED EPS_SERVER_DEFINES )
        SET_PROPERTY ( TARGET ${EPS_SERVER_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "${EPS_SERVER_DEFINES}" )
    ENDIF (  )

    GET_PROPERTY( EPS_SERVER_EXECUTABLE TARGET ${EPS_SERVER_BIN_FILE} PROPERTY LOCATION )

    IF ( CXX_GCC AND GCC_STRIP_EXECUTABLE )
        ADD_CUSTOM_COMMAND ( TARGET ${EPS_SERVER_BIN_FILE}
            POST_BUILD
            COMMAND strip ${EPS_SERVER_EXECUTABLE}
            COMMAND strip -R.comment ${EPS_SERVER_EXECUTABLE}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )

    IF ( WIN32 AND MINGW )
        GET_PROPERTY( MYLIB_LIBRARY_PATH TARGET ${MYLIB_BIN_NAME} PROPERTY LOCATION )

        ADD_CUSTOM_COMMAND ( TARGET ${EPS_SERVER_BIN_FILE}
            POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${MYLIB_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${BOOST_FILESYSTEM_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${BOOST_SYSTEM_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${BOOST_THREAD_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${CPPDB_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${CPPDB_SQLITE3_DRIVER}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${CRYPTOPP_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${GEOIP_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${LIBB64_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${SQLITE3_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${VMIME_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            "${ZEROMQ_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
        )

        IF ( QT5_LIBRARY_PATH )
            FOREACH ( TARGET_FILE ${MINGW_CPP_RUNTIME_FILES} )
                ADD_CUSTOM_COMMAND ( TARGET ${EPS_SERVER_BIN_FILE}
                POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
               "${QT5_LIBRARY_PATH}/${TARGET_FILE}" "${CMAKE_CURRENT_BINARY_DIR}"
            )
            ENDFOREACH( TARGET_FILE ${MINGW_CPP_RUNTIME_FILES} )
        ENDIF (  )
    ENDIF (  )
ENDIF (  )


